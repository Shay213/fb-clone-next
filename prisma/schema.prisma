// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  lastName       String
  email          String   @unique
  hashedPassword String
  birthday       DateTime
  gender         Gender
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  posts                 Post[]
  friends               Friend[]
  sendedNotifications   Notification[] @relation(name: "sender")
  receivedNotifications Notification[] @relation(name: "receiver")
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  description String
  audience    Audience
  img         String?
  authorId    String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model Friend {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  friendId  String   @db.ObjectId
  friend    User     @relation(fields: [friendId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model Notification {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  message    String
  senderId   String           @db.ObjectId
  sender     User             @relation(name: "sender", fields: [senderId], references: [id], onDelete: Cascade)
  receiverId String           @db.ObjectId
  receiver   User             @relation(name: "receiver", fields: [receiverId], references: [id], onDelete: Cascade)
  new        Boolean          @default(true)
  read       Boolean          @default(false)
  type       NotificationType
  createdAt  DateTime         @default(now())
}

enum NotificationType {
  FRIEND_REQUEST
}

enum Gender {
  MALE
  FEMALE
}

enum Audience {
  PUBLIC
  FRIENDS
  ONLY_ME
}
